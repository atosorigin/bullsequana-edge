---
- hosts: all
  connection: local
  name: Sensor Inventory
  gather_facts: False
  vars_files:
    - ../../vars/external_vars.yml
  vars:
    sensors_dict: {}
    datatype: rabbitmq_sensors

  tasks:
  - name: Create Auth token
    include_tasks: ../utils/utils_create_token.yml

  - name: Get sensors
    uri:
      url: "https://{{ baseuri }}/xyz/openbmc_project/sensors/enumerate"
      method: GET
      validate_certs: no
      headers:
        X-Auth-Token: "{{ x_token }}" 
        Content-Type: "application/json"
    register: result_sensors

  - set_fact:
      sensors: '{{ result_sensors.json.data }}'

  - name: Publish result to rabbitmq
    rabbitmq_publish:
      host: rabbitmq
      proto: amqp
      exclusive: false
      port: 5672
      vhost: awx
      durable: true
      username: mipm
      password: mipmpass
      body: "{{ item | to_json }}"
      queue: redfishmq
      auto_delete: false
      content_type: "text/plain"
    ignore_errors: yes
    with_dict: "{{ sensors }}"
    register: result_rabbitmq

  - name: Generate Jinja2 File 
    template:
      src: "{{datatype}}.j2"
      dest: "{{ rootdir }}/last_{{datatype}}.json"
    when: generate_file and sensors is defined
