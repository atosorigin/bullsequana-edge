---

  - debug:
      msg: "technical_state_path is {{ technical_state_path }}"
    when: technical_state_path is defined
    run_once: true

  - name: Get technical state path
    stat:
      path: "{{ technical_state_path }}"
    register: check_technical_state_path_exists

  - name: Validate technical state directory exists
    assert:
      that:
        - check_technical_state_path_exists.stat.exists == True
      fail_msg: "The technical state path {{ technical_state_path }} does NOT exist on host"
      success_msg: "The variable technical_state_path exist on host"
    run_once: true

  - name: Validate technical state directory is a directory
    assert:
      that:
        - check_technical_state_path_exists.stat.isdir == True
      fail_msg: "The technical state path {{ technical_state_path }} is NOT a directory on host"
      success_msg: "The variable technical_state_path is a directory on host"
    run_once: true

  - include_tasks: utils_firmware_inventory.yml

  - name: Render Active Firmwares before evaluation
    debug:
      msg: "Active {{ item.value.Purpose }} - {{ item.value.Version }} ({{ item.key }})"
    with_dict: "{{ firmware_inventory }}"
    when: >
      item.value.Activation is defined and 
      item.value.RequestedActivation is defined and 
      item.value.Activation == "xyz.openbmc_project.Software.Activation.Activations.Active" and
      item.value.RequestedActivation == "xyz.openbmc_project.Software.Activation.RequestedActivations.None"

  - name: Compare functional firmwares to Technical State xml file
    local_action: atos_openbmc technical_state_path={{ technical_state_path }} category=Update command=EvaluateFirmwareUpdate firmwares={{ firmware_inventory }}
    register: result_evaluate_firmware_update
    when: check_technical_state_path_exists.stat.exists == True and check_technical_state_path_exists.stat.isdir == True

  - set_fact:
      evaluate_firmware_update: "{{ result_evaluate_firmware_update.result.Firmwares }}"
    when: check_technical_state_path_exists.stat.exists == True and check_technical_state_path_exists.stat.isdir == True

  - name: Debug Evaluate Firmware to update
    debug: 
      msg: "NO firmware to update"
    when: evaluate_firmware_update is defined and evaluate_firmware_update|length==0

  - name: No Firmware to update 
    meta: end_host
    when: evaluate_firmware_update is defined and evaluate_firmware_update|length==0

  - name: Render Evaluate Firmware update
    debug: 
      var: evaluate_firmware_update
    when: evaluate_firmware_update is defined


