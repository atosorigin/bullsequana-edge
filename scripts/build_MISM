#!/bin/sh

unset $mism_version 

CWD="$(pwd)"
PKG=$CWD/pkg

read -p "Enter  new version ? " mism_version

echo ------------------------------
echo -- Building MISM $mism_version
echo ------------------------------

cd /var/livraisons/

rm -rf $mism_version-bullsequana-edge-system-management 
mkdir $mism_version-bullsequana-edge-system-management
cd $mism_version-bullsequana-edge-system-management

echo --------------------------------
echo -- Copying MISM to $mism_version
echo --------------------------------

# git clone https://bitbucketbdsfr.fsc.atos-services.net/scm/eds/mism.git
git clone https://github.com/atosorigin/bullsequana-edge-system-management.git

cp -r /var/mism .

cd bullsequana-edge-system-management

git tag -d $mism_version
git push --delete origin $mism_version

echo "export MISM_BULLSEQUANA_EDGE_VERSION=${mism_version}" > versions.sh
echo "export AWX_BULLSEQUANA_EDGE_VERSION=9.0.1" >> versions.sh
echo "export RABBITMQ_AWX_BULLSEQUANA_EDGE_VERSION=3.8.1-management" >> versions.sh
echo "export POSTGRES_AWX_BULLSEQUANA_EDGE_VERSION=12.0-alpine" >> versions.sh
echo "export PGADMIN_AWX_BULLSEQUANA_EDGE_VERSION=4.14" >> versions.sh
echo "export MEMCACHED_AWX_BULLSEQUANA_EDGE_VERSION=1.5.20-alpine" >> versions.sh
echo "export ZABBIX_BULLSEQUANA_EDGE_VERSION=centos-4.4.1" >> versions.sh
echo "export POSTGRES_ZABBIX_BULLSEQUANA_EDGE_VERSION=12.0-alpine" >> versions.sh
echo "export BASE_IMAGE_ZABBIX=zabbix-server-pgsql" >> versions.sh
echo "export BASE_IMAGE_ZABBIX_WEB=zabbix-web-nginx-pgsql" >> versions.sh
echo "export BASE_IMAGE_ZABBIX_AGENT=zabbix-agent" >> versions.sh
echo "export BASE_IMAGE_AWX_WEB=awx_web" >> versions.sh
echo "export BASE_IMAGE_AWX_TASK=awx_task" >> versions.sh

chmod ugo+x versions.sh
. ./versions.sh

sed -i "s/export MISM_BULLSEQUANA_EDGE_PLAYBOOKS_VERSION=.*/export MISM_BULLSEQUANA_EDGE_PLAYBOOKS_VERSION=${mism_version}/" add_awx_playbooks.sh
sed -i "s/MISM_BULLSEQUANA_EDGE_VERSION=.*/MISM_BULLSEQUANA_EDGE_VERSION=${mism_version}/" Dockerfiles/Dockerfile-awx_web
sed -i "s/MISM_BULLSEQUANA_EDGE_VERSION=.*/MISM_BULLSEQUANA_EDGE_VERSION=${mism_version}/" Dockerfiles/Dockerfile-awx_task
sed -i "s/MISM_BULLSEQUANA_EDGE_VERSION=.*/MISM_BULLSEQUANA_EDGE_VERSION=${mism_version}/" Dockerfiles/Dockerfile-zabbix
sed -i "s/MISM_BULLSEQUANA_EDGE_VERSION=.*/MISM_BULLSEQUANA_EDGE_VERSION=${mism_version}/" Dockerfiles/Dockerfile-zabbix-web
sed -i "s/MISM_BULLSEQUANA_EDGE_VERSION=.*/MISM_BULLSEQUANA_EDGE_VERSION=${mism_version}/" Dockerfiles/Dockerfile-zabbix-agent

echo current Branch is 
git branch
echo parameter is ${MISM_BULLSEQUANA_EDGE_VERSION}

echo "removing useless files for mism livraison $mism_version"
rm -rf cli
rm -rf ansible/pgdata
rm -rf zabbix/pgdata
rm -rf ansible/playbooks/redfish
rm -rf ansible/vars/external_vars.yml
rm -rf ansible/vars/passwords.yml
rm -rf ansible/plugins/modules/remote_management/openbmc/.vscode/
rm -rf ansible/plugins/callback/ansible_stdout_compact_logger/__pycache__/
rm -rf pkg
rm -rf scripts
rm -rf readme-*
rm -rf test*
rm -rf token*
rm -rf *.bak
rm install_ansible_prequisites.sh
rm -f zabbix/server/externalscripts/openbmc/*

git commit -am "deliverable ${mism_version}"
git push

git tag $mism_version
git push origin master --tags

echo --------------------------------
echo -- Building Images $mism_version
echo --------------------------------

docker container stop $(docker container ls -aq)
docker container rm $(docker container ls -aq)
#docker image rmi $(docker image ls -aq)

export REGISTRY=ansible
docker-compose -f docker_compose_awx.yml build \
 --build-arg MISM_BULLSEQUANA_EDGE_VERSION=$MISM_BULLSEQUANA_EDGE_VERSION \
 --build-arg REGISTRY=$REGISTRY \
 --build-arg BASE_IMAGE_AWX_TASK=$BASE_IMAGE_AWX_TASK \
 --build-arg TAG_AWX=$AWX_BULLSEQUANA_EDGE_VERSION \
 --build-arg BASE_IMAGE_AWX_WEB=$BASE_IMAGE_AWX_WEB \
 --no-cache

export REGISTRY=zabbix
docker-compose -f docker_compose_zabbix.yml build \
 --build-arg MISM_BULLSEQUANA_EDGE_VERSION=$MISM_BULLSEQUANA_EDGE_VERSION \
 --build-arg REGISTRY=$REGISTRY \
 --build-arg BASE_IMAGE_ZABBIX=$BASE_IMAGE_ZABBIX \
 --build-arg TAG_ZABBIX=$ZABBIX_BULLSEQUANA_EDGE_VERSION \
 --build-arg BASE_IMAGE_ZABBIX_WEB=$BASE_IMAGE_ZABBIX_WEB \
 --build-arg BASE_IMAGE_ZABBIX_AGENT=$BASE_IMAGE_ZABBIX_AGENT \
--no-cache

docker-compose -f docker_compose_awx.yml build
docker-compose -f docker_compose_zabbix.yml build
docker-compose -f docker_compose_awx.yml pull --ignore-pull-failures
#docker-compose -f docker_compose_awx.yml pull
docker-compose -f docker_compose_zabbix.yml pull --ignore-pull-failures
#docker-compose -f docker_compose_zabbix.yml pull

echo "docker save tag $MISM_BULLSEQUANA_EDGE_VERSION"

docker save -o bullsequana-edge-system-management_zabbix-web.$MISM_BULLSEQUANA_EDGE_VERSION.tar bullsequana-edge-system-management_zabbix-web:$MISM_BULLSEQUANA_EDGE_VERSION
if [ ! -f bullsequana-edge-system-management_zabbix-web.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "bullsequana-edge-system-management_zabbix-web.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o bullsequana-edge-system-management_zabbix-agent.$MISM_BULLSEQUANA_EDGE_VERSION.tar bullsequana-edge-system-management_zabbix-agent:$MISM_BULLSEQUANA_EDGE_VERSION
if [ ! -f bullsequana-edge-system-management_zabbix-agent.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "bullsequana-edge-system-management_zabbix-agent.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o bullsequana-edge-system-management_zabbix-server.$MISM_BULLSEQUANA_EDGE_VERSION.tar bullsequana-edge-system-management_zabbix-server:$MISM_BULLSEQUANA_EDGE_VERSION
if [ ! -f bullsequana-edge-system-management_zabbix-server.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "bullsequana-edge-system-management_zabbix-server.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o bullsequana-edge-system-management_awx_task.$MISM_BULLSEQUANA_EDGE_VERSION.tar bullsequana-edge-system-management_awx_task:$MISM_BULLSEQUANA_EDGE_VERSION
if [ ! -f bullsequana-edge-system-management_awx_task.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "bullsequana-edge-system-management_awx_task.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o bullsequana-edge-system-management_awx_web.$MISM_BULLSEQUANA_EDGE_VERSION.tar bullsequana-edge-system-management_awx_web:$MISM_BULLSEQUANA_EDGE_VERSION
if [ ! -f bullsequana-edge-system-management_awx_web.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "bullsequana-edge-system-management_awx_web.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o rabbitmq.$MISM_BULLSEQUANA_EDGE_VERSION.tar rabbitmq:$RABBITMQ_AWX_BULLSEQUANA_EDGE_VERSION
if [ ! -f rabbitmq.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "rabbitmq.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o memcached.$MISM_BULLSEQUANA_EDGE_VERSION.tar memcached:$MEMCACHED_AWX_BULLSEQUANA_EDGE_VERSION
if [ ! -f memcached.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "memcached.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o awx_task.$MISM_BULLSEQUANA_EDGE_VERSION.tar ansible/awx_task:$AWX_BULLSEQUANA_EDGE_VERSION
if [ ! -f awx_task.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "awx_task.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o awx_web.$MISM_BULLSEQUANA_EDGE_VERSION.tar ansible/awx_web:$AWX_BULLSEQUANA_EDGE_VERSION
if [ ! -f awx_web.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "awx_web.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o zabbix-server-pgsql.$MISM_BULLSEQUANA_EDGE_VERSION.tar zabbix/zabbix-server-pgsql:$ZABBIX_BULLSEQUANA_EDGE_VERSION
if [ ! -f zabbix-server-pgsql.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "zabbix-server-pgsql.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o zabbix-web-nginx-pgsql.$MISM_BULLSEQUANA_EDGE_VERSION.tar zabbix/zabbix-web-nginx-pgsql:$ZABBIX_BULLSEQUANA_EDGE_VERSION
if [ ! -f zabbix-web-nginx-pgsql.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "zabbix-web-nginx-pgsql.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o zabbix-agent.$MISM_BULLSEQUANA_EDGE_VERSION.tar zabbix/zabbix-agent:$ZABBIX_BULLSEQUANA_EDGE_VERSION
if [ ! -f zabbix-agent.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "zabbix-agent.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o postgres.$MISM_BULLSEQUANA_EDGE_VERSION.tar postgres:$POSTGRES_AWX_BULLSEQUANA_EDGE_VERSION
if [ ! -f postgres.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "postgres.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

docker save -o pgadmin4.$MISM_BULLSEQUANA_EDGE_VERSION.tar dpage/pgadmin4:$PGADMIN_AWX_BULLSEQUANA_EDGE_VERSION
if [ ! -f pgadmin4.$MISM_BULLSEQUANA_EDGE_VERSION.tar ]; then
    echo "pgadmin4.$MISM_BULLSEQUANA_EDGE_VERSION.tar file not found!"
    exit -1
fi

count_tar=$(ls -l . | egrep -c '*.tar$')

if [ ! "$count_tar" -eq 14 ]
then
  echo -e "\033[31mError: bad tar count: $count_tar / 14 !!\033[0m"
  exit -1
fi

echo -e "\e[104mCount tar ok : $count_tar / 14\033[0m"

rm -rf ansible/pgdata
rm -rf zabbix/pgdata
rm -rf ansible/vars/passwords.yml
rm -rf ansible/vars/external_vars.yml

rm -f mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz

echo "generating MISM Full version : tar mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz"
tar -czvf mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz * --exclude=".git" --exclude="*.pyc" --exclude="ansible/plugins/callback/ansible_stdout_compact_logger/__pycache__"
echo "terminated : mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz file generated in /var/livraisons/$MISM_BULLSEQUANA_EDGE_VERSION-bullsequana-edge-system-management/bullsequana-edge-system-management"

echo "generating MISM Light version : tar mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz"
tar -czvf mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz *.sh ansible/playbooks ansible/plugins zabbix/server/externalscripts/template-atos*.xml zabbix/server/externalscripts/* --exclude="versions.sh" --exclude=".git" --exclude="*.pyc" --exclude="ansible/plugins/callback/ansible_stdout_compact_logger/__pycache__"
echo "terminated : mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz file generated in /var/livraisons/$MISM_BULLSEQUANA_EDGE_VERSION-bullsequana-edge-system-management/bullsequana-edge-system-management"

echo "checking pgdata passwords.yml external_vars.yml in tar"
check_should_not_exists=`tar -tvf mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz |grep -E 'pgdata|passwords.yml|external_vars.yml'`
if [ ! -z "$check_should_not_exists" ]
then
  echo -e "\033[31mError: pgdata or passwords.jyml or external_vars.yml exists !! \033[0m"
  rm -rf mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz
  exit -1
fi

if [ ! -z "$check_should_not_exists" ]
then
  echo -e "\033[31mError: pgdata or passwords.jyml or external_vars.yml exists !! \033[0m"
  rm -rf mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz
  exit -1
fi

if [[ ! -d "$PKG" ]]
  mkdir -p $PKG
fi

mv mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz $PKG
mv mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz $PKG

if [ ! -f $PKG/mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz ] 
then
  echo -e "\033[31mError: package mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz was not generated!! \033[0m"
  exit -1
fi

if [ ! -f $PKG/mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz ] 
then
  echo -e "\033[31mError: package mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz was not generated!! \033[0m"
  exit -1
fi

cd $CWD

git checkout master

echo "export MISM_BULLSEQUANA_EDGE_VERSION=latest" > versions.sh
echo "export AWX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export RABBITMQ_AWX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export POSTGRES_AWX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export PGADMIN_AWX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export MEMCACHED_AWX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export ZABBIX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export POSTGRES_ZABBIX_BULLSEQUANA_EDGE_VERSION=latest" >> versions.sh
echo "export BASE_IMAGE_ZABBIX=zabbix-server-pgsql" >> versions.sh
echo "export BASE_IMAGE_ZABBIX_WEB=zabbix-web-nginx-pgsql" >> versions.sh
echo "export BASE_IMAGE_ZABBIX_AGENT=zabbix-agent" >> versions.sh
echo "export BASE_IMAGE_AWX_WEB=awx_web" >> versions.sh
echo "export BASE_IMAGE_AWX_TASK=awx_task" >> versions.sh

git add version.sh
git commit -am "back to latest"
git push

echo -e "\e[104mYour packages are generated in $PACK_DIR/mism_full.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz and $PACK_DIR/mism_light.$MISM_BULLSEQUANA_EDGE_VERSION.tar.gz\e[0m"