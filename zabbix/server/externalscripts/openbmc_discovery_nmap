#!/usr/bin/env python
# -*- coding: utf-8 -*-

############################
#
# OpenBMC Reader for Zabbix
#
# This script dicovers openbmc devices through nmap
#
# by francine.sauvage@atos.net
#
#

import sys
import os
import json
import argparse
import requests
import urllib
import urllib3
from requests.auth import HTTPBasicAuth

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def create_macros_for_host_discovery(json_host):
  macros = {}
  discovery_list = []

  macro_oob_ip = r"{#OOB_IP}"
  item_macro = {macro_oob_ip:'172.31.92.34'}
  discovery_list.append(item_macro)
  macro_serial = r"{#SERIAL}"
  item_macro = {macro_serial:'123456789'}
  discovery_list.append(item_macro)

  macros["data"] = discovery_list
  return macros

def main(args):
  parser = argparse.ArgumentParser(description="This script discovers openbmc devices for Atos Mipocket")
  parser.add_argument("-b", "--bmc", dest="bmc", help="bmc to check", required=True)
  parser.add_argument("-u", "--user", dest="user", help="valid user for the bmc uthentication", required=True)
  parser.add_argument("-p", "--password", dest="password", help="valid password for the bmc uthentication", required=True)
  args = parser.parse_args() 

  uri = "https://{host}{metadata}".format(host=args.bmc.strip(), metadata="/xyz/openbmc_project/enumerate")
  response = requests.get(uri, auth=HTTPBasicAuth(args.user.strip(), args.password.strip()), verify=False)
  data = response.json()
  macros = create_macros_for_host_discovery(data)
  print macros

main(sys.argv)
