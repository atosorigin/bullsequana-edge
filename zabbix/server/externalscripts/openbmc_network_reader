#!/usr/bin/env python
# -*- coding: utf-8 -*-

############################
#
# OpenBMC Network Reader for Zabbix
#
# This script reads network address from network inventory
#
# by francine.sauvage@atos.net
#
#

import sys
import os
import json
import argparse

def get_json_from_file(file_name):
  with open(os.path.join(os.getcwd(), "openbmc", file_name), 'r') as file_to_read:
    cache = json.load(file_to_read)
  return cache

def main(args):
  parser = argparse.ArgumentParser(description="This script reads network information previously collected from OpenBMC Mipocket")
  parser.add_argument("-f", "--file", dest="file", help="file name for the item", required=True)
  parser.add_argument("-i", "--item", dest="item", help="item identifier like ipv4 ipv6 ...", default="ipv4")
  parser.add_argument("-o", "--origin", dest="origin", help="Origin property of the item", default="xyz.openbmc_project.Network.IP.AddressOrigin.DHCP")
  parser.add_argument("-p", "--property", dest="property", help="json property of the item", default="Address")
  parser.add_argument("-e", "--eth", dest="eth", help="eth0 or eth1 of the item")
  args = parser.parse_args()
  file_item = args.file.strip()  

  items = get_json_from_file(file_item)
  targeted_item = args.item.strip()  
  for key, item in items.iteritems() :    
    if args.eth:
      if not key.startswith("/xyz/openbmc_project/network/"+args.eth.strip()+"/"+targeted_item):      
        continue
    else:
      if not key.startswith("/xyz/openbmc_project/network/"+targeted_item):      
        continue

    # key OK
    targeted_property = args.property.strip()  
    response = item.get(targeted_property, None)
    break
  if response:
    if type(response) == unicode and response.startswith("xyz.openbmc_project.Network."):
      response = response.replace('xyz.openbmc_project.Network.','')
    print(response)

main(sys.argv)
